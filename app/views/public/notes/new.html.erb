<div class="container">
  <h2>新規登録</h2>
  <div class="row">

    <!--左半分（入力フォーム）-->
    <div class="col-md-5">
      <%= form_with model: @note, local: true do |f| %>
        <div class="row form-group">
          <div class="col"><%= f.text_field :title, placeholder: "スポット・名物", class: "form-control", id:"input_name" %></div>
        </div>

        <div class="row form-group">
          <div class="col">
            <%= f.label :tag_id, "タグ設定：" %>
            <%= f.select :tag_id, @tag_list, class: "form-select" %>
          </div>
        </div>

        <div class="row form-group mt-2">
          <div class="col">
            <%= f.text_area :body, placeholder: "メモ（任意）", class: "form-control", size: "100x6" %>
          </div>
        </div>

        <div class="row form-group">
          <div class="col"><%= f.file_field :note_image, accept: 'image/*', class: "form-control-file" %></div>
        </div>

        <%= f.hidden_field :prefecture %>
        <%= f.hidden_field :city %>
        <%= f.hidden_field :address %>
        <%= f.hidden_field :latitude %>
        <%= f.hidden_field :longitude %>
        <%= f.hidden_field :customer_id, :value => current_customer.id %>

        <div class="row">
          <div class="col-md-2 offset-md-5">
            <% if f.object.new_record? %>
              <%= f.submit "保存", class: "btn btn-success" %>
            <% else %>
              <%= f.submit "変更", class: "btn btn-success" %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>

    <!--右半分-->
    <div class="col-md-7">

      <!--検索欄-->
      <form id='form'>
        <input type="text" id="note_seach" required minlength="2" size="35" placeholder="スポット名を検索" />
        <input type='button' value="スポット検索" onclick="geocode()">
      </form>
      <br>
      見つかった場所：<br>　<b id="seach_address"></b>

      <div class="row mt-3">
        <!--マップ表示-->
        <div class="col-md-9">
          <div id="map"></div>
        </div>

        <!--倍率変更ボタン-->
        <div class="col-md-3 mt-auto">
          <h6 class="text-center border border-secondary rounded-pill">縮尺変更</h6>
          <table>
            <thead>
              <th class="text-center"><font size="1">画面中心</font></th>
              <th class="text-center"><font size="1">マーカー</font></th>
            </thead>
            <tbody>
              <tr>
                <td><input type='button' value="全国" onclick="zoom_change(5)" class="btn btn-outline-primary w-100"></td>
                <td><input type='button' value="全国" onclick="zoom_change(5)" class="btn btn-outline-primary w-100"></td>
              </tr>
              <tr>
                <td><input type='button' value="地方" onclick="zoom_change(8)" class="btn btn-outline-primary w-100"></td>
                <td><input type='button' value="地方" onclick="zoom_change(8)" class="btn btn-outline-primary w-100"></td>
              </tr>
              <tr>
                <td class="text-center"><input type='button' value="県" onclick="zoom_change(10)" class="btn btn-outline-primary w-100"></td>
                <td class="text-center"><input type='button' value="県" onclick="zoom_change(10)" class="btn btn-outline-primary w-100"></td>
              </tr>
              <tr>
                <td class="text-center"><input type='button' value="市" onclick="zoom_change(13)" class="btn btn-outline-primary w-100"></td>
                <td class="text-center"><input type='button' value="市" onclick="zoom_change(13)" class="btn btn-outline-primary w-100"></td>
              </tr>
              <tr>
                <td><input type='button' value="町字" onclick="zoom_change(16)" class="btn btn-outline-primary w-100"></td>
                <td><input type='button' value="町字" onclick="zoom_change(16)" class="btn btn-outline-primary w-100"></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <!--マーカー調整ボタン-->
      <form id='form' class='mt-2'>
        <input type='button' value="今のマップ中央をマーク" onclick="set_marker_with_display()">
      </form>

      <!--デバッグ用-->
      <div id="prefecture"></div>
      <div id="city"></div>
      <div id="lat"></div>
      <div id="lng"></div>
      <div id="test"></div>
    </div>
  </div>
</div>


<style>
#map{
  height: 400px;
  width: 400px;
}
</style>

<script>
  let map
  let geocoder
  let marker
  let marker_latlng
  let uluru
  let infowindow
  function initMap() {
    geocoder = new google.maps.Geocoder()
    // 数値が入っていないとマップが非表示になってしまうためnilの場合は0を入れる
    // contollerにて既存に登録している緯度と経度を変数に入れて渡す
    uluru = {lat: <%= @lat || 0 %>, lng: <%= @lng || 0 %>};
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 16,
      center: uluru,
      streetViewControl: false, //ストリートビューに切り替えるボタンを非表示
      mapTypeControl: false, //地図と航空写真を切り替えるボタンを非表示
      scrollwheel: true, //マウスホイールによるzoomを許可
    });
    contentString = "登録位置"
    infowindow = new google.maps.InfoWindow({
      content: contentString,
      ariaLabel: "Uluru",
    });
    marker = new google.maps.Marker({
      position: uluru,
      map: map,
      draggable: true   // ドラッグ可
    });

    marker_latlng = uluru;

    // マーカーのドロップ（ドラッグ終了）時のイベント
    google.maps.event.addListener( marker, 'dragend', function(ev){
      // イベントの引数evの、プロパティ.latLngが緯度経度。
      marker_latlng = ev.latLng;
      geocode_lacation(ev.latLng);
    });
  }

  // マーカー削除
  function clear() {
  marker.setMap(null);
  responseDiv.style.display = "none";
  }

  //入力文字から住所検索
  function geocode() {
    geocoder.geocode(
    {
      'address': document.getElementById('note_seach').value,
      'region': 'jp'
    },
    function(results, status){
      if(status==google.maps.GeocoderStatus.OK){
        document.getElementById('seach_address').innerHTML = results[0].formatted_address
        document.getElementById('prefecture').innerHTML = "都道府県：" + getLocalName(results,1); //デバッグ用
      	document.getElementById('city').innerHTML = "市町村：" + getLocalName(results,2); //デバッグ用
      	var lat = results[0].geometry.location.lat(); //検索緯度
      	var lng = results[0].geometry.location.lng(); //検索経度
      	map.setCenter(results[0].geometry.location); //地図を遷移
        move_marker(lat, lng) //マーカーを移動
        hidden_field_change(results) //フォーム変更
      } else {
        alert('スポットが見つかりませんでした')
      }
    });
  }

  //緯度経度から住所検索
  function geocode_lacation(latlng) {
    geocoder.geocode(
    {
      'location': latlng,
      'region': 'jp'
    },
    function(results, status){
      if(status==google.maps.GeocoderStatus.OK){
        document.getElementById('seach_address').innerHTML = results[0].formatted_address //viewに住所を表示
        move_marker(latlng.lat(), latlng.lng()) //マーカーを移動
        hidden_field_change(results) //フォーム変更
      } else {
        alert('スポットが見つかりませんでした')
      }
    });
  }

  // ジオコード結果から国・県・市名を取得、type_code:0=>国、1=>県、2=>市
  function getLocalName(geoCodeResults, type_code){
    var type_array = ['country', 'administrative_area_level_1', 'locality'];
    // ジオコーディング結果を用いた処理
    var geoCnt = geoCodeResults[0].address_components.length;
    var prefName = "";
    for (var i = 0; i < geoCnt; i++) {
        if (geoCodeResults[0].address_components[i].types[0] === type_array[type_code]) {
            prefName = geoCodeResults[0].address_components[i].long_name;
            return prefName;
        }
    }
    return prefName;
  }

  // マーカー移動
  function move_marker(latitude, longitude) {
    uluru = {lat: latitude, lng: longitude};
    marker.setMap(null);  //マーカー削除
    marker = new google.maps.Marker({
      position: uluru,
      map: map,
      draggable: true   // true=>ドラッグ可能
    });
    infowindow.setContent("この位置を登録する");
    infowindow.open(map, marker);

    // マーカーのドロップ（ドラッグ終了）時のイベント
    google.maps.event.addListener( marker, 'dragend', function(ev){
      // イベントの引数evの、プロパティ.latLngが緯度経度。
      marker_latlng = ev.latLng;
      geocode_lacation(ev.latLng);
    });
  }

  //現在の表示位置にマーカーを設置する
  function set_marker_with_display(){
    var latlng = map.getCenter();
    geocode_lacation(latlng);
  }

  //ジオコード結果に基づいてhiddenフォーム変更
  function hidden_field_change(geoCodeResults){
    document.getElementById("note_prefecture").value = getLocalName(geoCodeResults,1)
    document.getElementById("note_city").value = getLocalName(geoCodeResults,2)
    document.getElementById("note_address").value = geoCodeResults[0].formatted_address
    document.getElementById("note_latitude").value = geoCodeResults[0].geometry.location.lat()
    document.getElementById("note_longitude").value = geoCodeResults[0].geometry.location.lng()
    // document.getElementById("test").innerHTML = getLocalName(geoCodeResults,1) + " " + getLocalName(geoCodeResults,2) + " " + geoCodeResults[0].formatted_address + " " + geoCodeResults[0].geometry.location.lat() + " " + geoCodeResults[0].geometry.location.lng()
  }

  //ズームレベル変更
  function zoom_change(zoom_level, is_maker = true){
    if(is_maker == true && marker_latlng){
      map.setCenter(marker_latlng)
    }
    map.setZoom(zoom_level)
  }

  // input_nameのテキストフォームが変更されたときのイベント
  window.addEventListener('DOMContentLoaded', function(){
    input_name.addEventListener("change",function(){
      document.getElementById("note_seach").value = document.getElementById("input_name").value;
      geocode()
    });
  });

  // スポット検索欄でEnterキーによるsubmitを無効化
  document.getElementById("note_seach").onkeypress = (e) => {
    const key = e.keyCode || e.charCode || 0; // フォームに入力されたキーを取得
    if (key == 13) { // 13はEnterキーのキーコード
      e.preventDefault(); // submitを行わない
      geocode() //代わりにマップ検索を行う
    }
  }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['MAP_KEY'] %>&callback=initMap" async defer></script>